{"ast":null,"code":"import { filter } from 'rxjs';\nimport { SocketEventsEnum } from 'src/app/shared/types/socketEvents.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/boards.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/board.service\";\nimport * as i4 from \"../../../shared/services/socket.service\";\nimport * as i5 from \"@angular/common\";\nexport class BoardComponent {\n  constructor(boardsService, route, boardService, socketService) {\n    this.boardsService = boardsService;\n    this.route = route;\n    this.boardService = boardService;\n    this.socketService = socketService;\n    const boardId = this.route.snapshot.paramMap.get('boardId');\n\n    if (!boardId) {\n      throw new Error('Cant get boardID from url');\n    }\n\n    this.boardId = boardId;\n    this.board$ = this.boardService.board$.pipe(filter(Boolean));\n  }\n\n  ngOnInit() {\n    this.socketService.emit(SocketEventsEnum.boardsJoin, {\n      boardId: this.boardId\n    });\n    this.fetchData();\n    this.initializeListener;\n  }\n\n  fetchData() {\n    this.boardsService.getBoard(this.boardId).subscribe(board => {\n      this.boardService.setBoard(board);\n    });\n  }\n\n}\n\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.BoardsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.BoardService), i0.ɵɵdirectiveInject(i4.SocketService));\n};\n\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"board\"]],\n  decls: 3,\n  vars: 5,\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n      i0.ɵɵpipe(1, \"json\");\n      i0.ɵɵpipe(2, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate1(\"Board\\n\", i0.ɵɵpipeBind1(1, 1, i0.ɵɵpipeBind1(2, 3, ctx.board$)), \"\");\n    }\n  },\n  dependencies: [i5.AsyncPipe, i5.JsonPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAT,QAAmC,MAAnC;AAKA,SAASC,gBAAT,QAAiC,wCAAjC;;;;;;;AAMA,OAAM,MAAOC,cAAP,CAAqB;EAIzBC,YACUC,aADV,EAEUC,KAFV,EAGUC,YAHV,EAIUC,aAJV,EAIsC;IAH5B;IACA;IACA;IACA;IAER,MAAMC,OAAO,GAAG,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,SAAjC,CAAhB;;IAEA,IAAI,CAACH,OAAL,EAAc;MACZ,MAAM,IAAII,KAAJ,CAAU,2BAAV,CAAN;IACD;;IAED,KAAKJ,OAAL,GAAeA,OAAf;IACA,KAAKK,MAAL,GAAc,KAAKP,YAAL,CAAkBO,MAAlB,CAAyBC,IAAzB,CAA8Bd,MAAM,CAACe,OAAD,CAApC,CAAd;EACD;;EAEDC,QAAQ;IACN,KAAKT,aAAL,CAAmBU,IAAnB,CAAwBhB,gBAAgB,CAACiB,UAAzC,EAAqD;MACnDV,OAAO,EAAE,KAAKA;IADqC,CAArD;IAGA,KAAKW,SAAL;IACA,KAAKC,kBAAL;EACD;;EAEDD,SAAS;IACP,KAAKf,aAAL,CAAmBiB,QAAnB,CAA4B,KAAKb,OAAjC,EAA0Cc,SAA1C,CAAqDC,KAAD,IAAU;MAC5D,KAAKjB,YAAL,CAAkBkB,QAAlB,CAA2BD,KAA3B;IACD,CAFD;EAGD;;AAhCwB;;;mBAAdrB,gBAAcuB;AAAA;;;QAAdvB;EAAcwB;EAAAC;EAAAC;EAAAC;IAAA;MCb3BJ;;;;;;MAAAA","names":["filter","SocketEventsEnum","BoardComponent","constructor","boardsService","route","boardService","socketService","boardId","snapshot","paramMap","get","Error","board$","pipe","Boolean","ngOnInit","emit","boardsJoin","fetchData","initializeListener","getBoard","subscribe","board","setBoard","i0","selectors","decls","vars","template"],"sourceRoot":"","sources":["/home/ct/Documents/fullstack-trello-clone/eltrello/client/src/app/board/components/board/board.component.ts","/home/ct/Documents/fullstack-trello-clone/eltrello/client/src/app/board/components/board/board.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { filter, Observable } from 'rxjs';\nimport { BoardsService } from 'src/app/shared/services/boards.service';\nimport { BoardInterface } from 'src/app/shared/types/board.interface';\nimport { BoardService } from '../../services/board.service';\nimport { SocketService } from '../../../shared/services/socket.service';\nimport { SocketEventsEnum } from 'src/app/shared/types/socketEvents.enum';\n\n@Component({\n  selector: 'board',\n  templateUrl: './board.component.html',\n})\nexport class BoardComponent implements OnInit {\n  boardId: string;\n  board$: Observable<BoardInterface>;\n\n  constructor(\n    private boardsService: BoardsService,\n    private route: ActivatedRoute,\n    private boardService: BoardService,\n    private socketService: SocketService,\n  ) {\n    const boardId = this.route.snapshot.paramMap.get('boardId');\n\n    if (!boardId) {\n      throw new Error('Cant get boardID from url');\n    }\n\n    this.boardId = boardId;\n    this.board$ = this.boardService.board$.pipe(filter(Boolean));\n  }\n\n  ngOnInit(): void {\n    this.socketService.emit(SocketEventsEnum.boardsJoin, { \n      boardId: this.boardId \n    });\n    this.fetchData();\n    this.initializeListener\n  }\n\n  fetchData(): void {\n    this.boardsService.getBoard(this.boardId).subscribe((board) => {\n      this.boardService.setBoard(board);\n    });\n  }\n}","Board\n{{board$ | async | json }}"]},"metadata":{},"sourceType":"module"}